name: Ansible CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run tasks against"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging, prod]

    if: github.event_name != 'workflow_dispatch' || github.event.inputs.environment == matrix.environment

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "DEPLOY_ENV=dev" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          fi

      - name: Python Setup
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Generate Ansible Inventory and Scan Host Keys
        working-directory: ./terraform/environments/${{ matrix.environment }}
        run: |
          terraform init

          VM_PUBLIC_IP=$(terraform output -raw vm_public_ip)

          ssh-keyscan -H $VM_PUBLIC_IP >> ~/.ssh/known_hosts

          terraform output -json ansible_inventory > ../../../ansible/inventory/${{ matrix.environment }}.inventory.json

      - name: Setup Ansible Vault
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          echo "$ANSIBLE_VAULT_PASSWORD" > .vault_pass
          chmod 600 .vault_pass

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.json playbooks/site.yml \
            --vault-password-file .vault_pass
