name: "Terraform Unit Tests"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  security-events: write
  contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  basic-validation:
    name: "Basic Validation: ${{ matrix.environment }}"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging, prod]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend=false
        working-directory: ./terraform/environments/${{ matrix.environment }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform/environments/${{ matrix.environment }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ./terraform

      - name: Run Checkov Security Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./terraform/environments/${{ matrix.environment }}
          framework: terraform
          # skip_check: CKV2_AZURE_31
          soft_fail: true

  # Run Terratest conditionally
  terratest-dev:
    name: "Terratest Dev (Full Integration)"
    runs-on: ubuntu-latest
    needs: basic-validation
    # Only run on:
    # - pushes to main
    # - PRs with [terratest] in title
    # - changes to critical files
    if: |
      github.ref == 'refs/heads/main' ||
      contains(github.event.pull_request.title, '[terratest]') ||
      contains(github.event.pull_request.title, '[full-test]')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform-wrapper: false

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-dev-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-dev-
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        run: go mod download
        working-directory: ./terraform/environments/dev

      - name: Run Terratest (Plan Only)
        run: go test -v -short -timeout 10m
        working-directory: ./terraform/environments/dev/test
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: "devops-intern-sandbox-rg-sandbox-sea"
          TF_VAR_key_vault_name: "rg-intern-devops"

      - name: Run Terratest (Full Integration)
        if: |
          github.ref == 'refs/heads/main' ||
          contains(github.event.pull_request.title, '[full-integration]')
        run: go test -v -timeout 30m
        working-directory: ./terraform/environments/dev/test
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: "devops-intern-sandbox-rg-sandbox-sea"
          TF_VAR_key_vault_name: "rg-intern-devops"

  terratest-staging:
    name: "Terratest Staging (Full Integration)"
    runs-on: ubuntu-latest
    needs: terratest-dev
    # Only run on:
    # - pushes to main
    # - PRs with [terratest] in title
    # - changes to critical files
    if: |
      github.ref == 'refs/heads/main' ||
      contains(github.event.pull_request.title, '[terratest]') ||
      contains(github.event.pull_request.title, '[full-test]')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform-wrapper: false

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-staging-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-staging-
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        run: go mod download
        working-directory: ./terraform/environments/staging

      - name: Run Terratest (Plan Only)
        run: go test -v -short -timeout 10m
        working-directory: ./terraform/environments/staging/test
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: "devops-intern-sandbox-rg-sandbox-sea"
          TF_VAR_key_vault_name: "rg-intern-devops"

      - name: Run Terratest (Full Integration)
        if: |
          github.ref == 'refs/heads/main' ||
          contains(github.event.pull_request.title, '[full-integration]')
        run: go test -v -timeout 30m
        working-directory: ./terraform/environments/staging/test
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: "devops-intern-sandbox-rg-sandbox-sea"
          TF_VAR_key_vault_name: "rg-intern-devops"

  terratest-prod:
    name: "Terratest Prod (Full Integration)"
    runs-on: ubuntu-latest
    needs: terratest-staging
    # Only run on:
    # - pushes to main
    # - PRs with [terratest] in title
    # - changes to critical files
    if: |
      github.ref == 'refs/heads/main' ||
      contains(github.event.pull_request.title, '[terratest]') ||
      contains(github.event.pull_request.title, '[full-test]')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform-wrapper: false

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-prod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-prod-
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        run: go mod download
        working-directory: ./terraform/environments/prod

      - name: Run Terratest (Plan Only)
        run: go test -v -short -timeout 10m
        working-directory: ./terraform/environments/prod/test
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: "devops-intern-sandbox-rg-sandbox-sea"
          TF_VAR_key_vault_name: "rg-intern-devops"

      - name: Run Terratest (Full Integration)
        if: |
          github.ref == 'refs/heads/main' ||
          contains(github.event.pull_request.title, '[full-integration]')
        run: go test -v -timeout 30m
        working-directory: ./terraform/environments/prod/test
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: "devops-intern-sandbox-rg-sandbox-sea"
          TF_VAR_key_vault_name: "rg-intern-devops"
